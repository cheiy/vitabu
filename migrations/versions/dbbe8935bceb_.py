"""empty message

Revision ID: dbbe8935bceb
Revises: f78651500320
Create Date: 2023-07-08 21:54:35.786461

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'dbbe8935bceb'
down_revision = 'f78651500320'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_listings',
    sa.Column('book_id', sa.BigInteger(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.book_id'], ),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.listing_id'], ),
    sa.PrimaryKeyConstraint('book_id', 'listing_id')
    )
    op.drop_table('user_listings')
    with op.batch_alter_table('book_authors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('author_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('books', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'books', ['books'], ['book_id'])
        batch_op.create_foreign_key(None, 'authors', ['author_id'], ['author_id'])
        batch_op.drop_column('book_author')

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('subject_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('publisher_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('grade_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'grades', ['grade_id'], ['grade_id'])
        batch_op.create_foreign_key(None, 'subjects', ['subject_id'], ['subject_id'])
        batch_op.create_foreign_key(None, 'publishers', ['publisher_id'], ['publisher_id'])

    with op.batch_alter_table('listings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])

    with op.batch_alter_table('publishers', schema=None) as batch_op:
        batch_op.alter_column('ISBN_code',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('added_by',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('date_added',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.Integer(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.create_unique_constraint(None, ['ISBN_code'])
        batch_op.create_foreign_key(None, 'users', ['added_by'], ['user_id'])

    with op.batch_alter_table('subjects', schema=None) as batch_op:
        batch_op.alter_column('subject_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('subjects', schema=None) as batch_op:
        batch_op.alter_column('subject_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('publishers', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('date_added',
               existing_type=sa.Integer(),
               type_=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('added_by',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('ISBN_code',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=True)

    with op.batch_alter_table('listings', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('grade_id')
        batch_op.drop_column('publisher_id')
        batch_op.drop_column('subject_id')

    with op.batch_alter_table('book_authors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('book_author', mysql.INTEGER(), autoincrement=True, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('books')
        batch_op.drop_column('author_id')

    op.create_table('user_listings',
    sa.Column('user_listing', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('user_listing'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('book_listings')
    # ### end Alembic commands ###
