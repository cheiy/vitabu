"""empty message

Revision ID: 8b582217e4b4
Revises: 20988c29b89d
Create Date: 2023-07-08 19:26:05.963652

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '8b582217e4b4'
down_revision = '20988c29b89d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_authors',
    sa.Column('book_author', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('book_author')
    )
    op.create_table('listings',
    sa.Column('listing_id', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('listing_id')
    )
    op.create_table('user_listings',
    sa.Column('user_listing', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('user_listing')
    )
    with op.batch_alter_table('authors', schema=None) as batch_op:
        batch_op.alter_column('author_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('author_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_constraint('FK_AuthorBook', type_='foreignkey')
        batch_op.drop_column('book_id')

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.alter_column('isbn_code',
               existing_type=mysql.BIGINT(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.create_unique_constraint(None, ['title'])
        batch_op.create_unique_constraint(None, ['isbn_code'])
        batch_op.drop_constraint('books_ibfk_1', type_='foreignkey')
        batch_op.drop_column('publisher_id')
        batch_op.drop_column('subject_id')
        batch_op.drop_column('grade_id')

    with op.batch_alter_table('grades', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['grade_name'])
        batch_op.create_unique_constraint(None, ['grade_num'])

    with op.batch_alter_table('publishers', schema=None) as batch_op:
        '''
        batch_op.add_column(sa.Column('ISBN_code', sa.Integer(), nullable=True))
        '''
        batch_op.alter_column('publisher_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('date_added',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.Integer(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.create_unique_constraint(None, ['shortname'])
        batch_op.create_unique_constraint(None, ['ISBN_code'])
        batch_op.create_unique_constraint(None, ['date_added'])
        batch_op.create_unique_constraint(None, ['longname'])
        '''
        batch_op.drop_column('ISBN')
        '''
        batch_op.alter_column('ISBN', 'ISBN_code')
        '''
        batch_op.drop_column('user_id')
        '''
        batch_op.alter_column('user_id', 'added_by')

    with op.batch_alter_table('subjects', schema=None) as batch_op:
        '''
        batch_op.add_column(sa.Column('subject_id', sa.Integer(), nullable=False))
        batch_op.drop_column('id')
        '''
        batch_op.alter_column('id', 'subject_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('email_address',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               nullable=True)
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=512),
               nullable=True)
        batch_op.alter_column('phone_number',
               existing_type=mysql.BIGINT(),
               type_=sa.Integer(),
               nullable=True)
        batch_op.alter_column('gender',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('is_admin',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
        batch_op.drop_index('first_name_2')
        batch_op.drop_index('username_2')
        batch_op.create_index(batch_op.f('ix_users_email_address'), ['email_address'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)
        batch_op.drop_column('signup_date')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('signup_date', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False))
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_last_name'))
        batch_op.drop_index(batch_op.f('ix_users_first_name'))
        batch_op.drop_index(batch_op.f('ix_users_email_address'))
        batch_op.create_index('username_2', ['username', 'email_address'], unique=False)
        batch_op.create_index('first_name_2', ['first_name', 'last_name', 'username', 'email_address', 'phone_number'], unique=False)
        batch_op.alter_column('is_admin',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
        batch_op.alter_column('gender',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('phone_number',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=512),
               type_=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('email_address',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('subjects', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False))
        batch_op.drop_column('subject_id')

    with op.batch_alter_table('publishers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', mysql.BIGINT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ISBN', mysql.BIGINT(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('date_added',
               existing_type=sa.Integer(),
               type_=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('publisher_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.drop_column('ISBN_code')

    with op.batch_alter_table('grades', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('grade_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('subject_id', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('publisher_id', mysql.BIGINT(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('books_ibfk_1', 'publishers', ['publisher_id'], ['publisher_id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('title',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('isbn_code',
               existing_type=mysql.BIGINT(),
               nullable=False)

    with op.batch_alter_table('authors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('book_id', mysql.BIGINT(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('FK_AuthorBook', 'books', ['book_id'], ['book_id'])
        batch_op.alter_column('author_name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('author_id',
               existing_type=sa.Integer(),
               type_=mysql.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    op.drop_table('user_listings')
    op.drop_table('listings')
    op.drop_table('book_authors')
    # ### end Alembic commands ###
